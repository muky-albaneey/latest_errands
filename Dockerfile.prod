
# # Use the specified Node.js version as the base image
# FROM node:20.15.0

# # Create and change to the app directory
# WORKDIR /usr/src/app

# # Copy application dependency manifests to the container image
# COPY package*.json ./

# # Install all dependencies
# RUN npm install

# # Copy local code to the container image
# COPY . .

# # Build the application
# RUN npm run build

# # Prune dev dependencies
# RUN npm prune --production

# # Remove source files if needed
# RUN rm -rf ./src

# # Document that the service listens on port 3001
# EXPOSE 3001

# # Run the web service on container startup
# CMD ["npm", "run", "start:prod"]
# Build stage
# FROM node:20.15.0

# # Create and change to the app directory
# WORKDIR /usr/src/app

# # Copy application dependency manifests to the container image
# COPY package*.json ./

# # Install dependencies
# RUN npm install

# # Install Nest CLI globally (if required)
# RUN npm install -g @nestjs/cli

# # Copy local code to the container image
# COPY . .

# # Expose the port
# EXPOSE 3000

# # Run the web service on container startup
# CMD ["npm", "run", "start:dev"]

# Use an official Node.js image as the base image
# Stage 1: Build
# FROM node:20.15.0 as builder

# # Limit memory usage
# ENV NODE_OPTIONS="--max-old-space-size=96"

# # Set working directory
# WORKDIR /usr/src/app

# # Copy package manifests and install dependencies
# COPY package*.json ./
# RUN npm install

# # Copy source code and build
# COPY . .
# RUN npm run build

# # Stage 2: Production
# FROM node:20.15.0

# # Limit memory usage
# ENV NODE_OPTIONS="--max-old-space-size=96"

# # Set working directory
# WORKDIR /usr/src/app

# # Copy package manifests and install only production dependencies
# COPY package*.json ./
# RUN npm install --omit=dev

# # Copy built files from the builder stage
# COPY --from=builder /usr/src/app/dist ./dist

# # Expose the application port
# EXPOSE 3000

# # Run the application
# CMD ["npm", "run", "start:prod"]

# Use the specified Node.js version as the base image
FROM node:20.15.0

# Create and change to the app directory
WORKDIR /usr/src/app

# Copy application dependency manifests to the container image
COPY package*.json ./

# Install all dependencies
RUN npm install

# Copy local code to the container image
COPY . .

# Build the application
RUN npm run build

# Prune dev dependencies
RUN npm prune --production

# Remove source files if needed
RUN rm -rf ./src

# Document that the service listens on port 3001
EXPOSE 3001

# Run the web service on container startup
CMD ["npm", "run", "start:prod"]
